/*
Copyright (c) 2024 Seldon Technologies Ltd.

Use of this software is governed BY
(1) the license included in the LICENSE file or
(2) if the license included in the LICENSE file is the Business Source License 1.1,
the Change License after the Change Date as each is defined in accordance with the LICENSE file.
*/
// Code generated by informer-gen. DO NOT EDIT.

package machinelearning

import (
	internalinterfaces "github.com/seldonio/seldon-core/operator/client/machinelearning.seldon.io/v1alpha3/informers/externalversions/internalinterfaces"
	v1alpha3 "github.com/seldonio/seldon-core/operator/client/machinelearning.seldon.io/v1alpha3/informers/externalversions/machinelearning.seldon.io/v1alpha3"
)

// Interface provides access to each of this group's versions.
type Interface interface {
	// V1alpha3 provides access to shared informers for resources in V1alpha3.
	V1alpha3() v1alpha3.Interface
}

type group struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &group{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// V1alpha3 returns a new v1alpha3.Interface.
func (g *group) V1alpha3() v1alpha3.Interface {
	return v1alpha3.New(g.factory, g.namespace, g.tweakListOptions)
}
